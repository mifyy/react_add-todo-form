{"version":3,"sources":["components/TodoInfo/TodoInfo.tsx","components/UserInfo/UserInfo.tsx","components/TodoList/TodoList.tsx","components/utils/utils.tsx","App.tsx","api/todos.ts","api/users.ts","index.tsx"],"names":["TodoInfo","todo","className","title","UserInfo","user","href","email","name","TodoList","todos","users","map","id","completed","filter","userId","getNewTodoId","Math","max","initialTodos","initialUsers","username","App","useState","setTodos","isTitleInvalid","setIsTitleInvalid","isUserValid","setIsUserValid","newTitle","setNewTitle","newUser","setNewUser","validFormUser","validFormTitle","action","method","onSubmit","e","preventDefault","newTodo","addTodo","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7a9c585d.chunk.js","sourcesContent":["import { Todo } from '../../Types/Todo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n  );\n};\n","import { User } from '../../Types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import { User } from '../../Types/User';\nimport { Todo } from '../../Types/Todo';\nimport { TodoInfo } from '../TodoInfo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todos: Todo[],\n  users: User[],\n};\n\nconst TodoList: React.FC<Props> = ({ todos, users }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <article\n          data-id={todo.id}\n          className={\n            todo.completed ? 'TodoInfo TodoInfo--completed' : 'TodoInfo'\n          }\n          key={todo.id}\n        >\n          <TodoInfo todo={todo} />\n          {users\n            .filter((user) => todo.userId === user.id)\n            .map((user) => (\n              <div key={user.id}>\n                <UserInfo user={user} />\n              </div>\n            ))}\n        </article>\n      ))}\n    </section>\n  );\n};\n\nexport default TodoList;\n","import { Todo } from '../../Types/Todo';\n\nexport function getNewTodoId(todos: Todo[]): number {\n  const maxId = Math.max(...todos.map(todo => todo.id));\n\n  return maxId + 1;\n}\n","import './App.scss';\nimport { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport TodoList from './components/TodoList/TodoList';\nimport { User } from './Types/User';\nimport { Todo } from './Types/Todo';\nimport { getNewTodoId } from './components/utils/utils';\n\nconst initialTodos = todosFromServer;\nconst initialUsers = usersFromServer;\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(initialTodos);\n  const users: User[] = initialUsers;\n  const [isTitleInvalid, setIsTitleInvalid] = useState(false);\n  const [isUserValid, setIsUserValid] = useState(false);\n  const [newTitle, setNewTitle] = useState('');\n  const [newUser, setNewUser] = useState(0);\n\n  const validFormUser = () => (newUser\n    ? (setIsUserValid(false), false) : (setIsUserValid(true), true));\n\n  const validFormTitle = () => (newTitle\n    ? (setIsTitleInvalid(false), false) : (setIsTitleInvalid(true), true));\n\n  const addTodo = () => {\n    if (!validFormTitle() && !validFormUser()) {\n      const newTodo = {\n        id: getNewTodoId(todos),\n        title: newTitle,\n        userId: newUser,\n        completed: false,\n      };\n\n      setTodos([...todos, newTodo]);\n    }\n  };\n\n  const reset = () => {\n    setNewUser(0);\n    setNewTitle('');\n  };\n\n  const submitHandler = (e: React.FormEvent) => {\n    e.preventDefault();\n    validFormTitle();\n    validFormUser();\n    addTodo();\n    if (!validFormTitle() && !validFormUser()) {\n      reset();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" method=\"POST\" onSubmit={submitHandler}>\n        <div className=\"field\">\n          Title:\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={newTitle}\n            onChange={(e) => {\n              setNewTitle(e.target.value);\n              setIsTitleInvalid(false);\n            }}\n          />\n          {isTitleInvalid\n          && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          User:\n          <select\n            data-cy=\"userSelect\"\n            value={newUser}\n            onChange={(e) => {\n              setNewUser(+e.target.value);\n              setIsUserValid(false);\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {users.map((user) => (\n              <option key={user.id} value={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {isUserValid && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">Add</button>\n      </form>\n      <TodoList todos={todos} users={users} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
{"version":3,"sources":["api/users.ts","api/todos.ts","components/TodoInfo/TodoInfo.tsx","components/UserInfo/UserInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","TodoInfo","todo","className","UserInfo","user","href","TodoList","todos","users","map","filter","App","useState","todosFromServer","setTodos","usersFromServer","emptyTitle","setEmptyTitle","emptyUser","setEmptyUser","newTitle","setNewTitle","newUser","setNewUser","validFormUser","validFormTitle","action","method","onSubmit","e","preventDefault","newTodo","Math","max","addTodo","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.edb3b421.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { Todo } from '../../Types/Todo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n  );\n};\n","import { User } from '../../Types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import { User } from '../../Types/User';\nimport { Todo } from '../../Types/Todo';\nimport { TodoInfo } from '../TodoInfo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todos: Todo[],\n  users: User[],\n};\n\nconst TodoList: React.FC<Props> = ({ todos, users }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <article\n          data-id={todo.id}\n          className={\n            todo.completed ? 'TodoInfo TodoInfo--completed' : 'TodoInfo'\n          }\n          key={todo.id}\n        >\n          <TodoInfo todo={todo} />\n          {users\n            .filter((user) => todo.userId === user.id)\n            .map((user) => (\n              <div key={user.id}>\n                <UserInfo user={user} />\n              </div>\n            ))}\n        </article>\n      ))}\n    </section>\n  );\n};\n\nexport default TodoList;\n","import './App.scss';\nimport { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport TodoList from './components/TodoList/TodoList';\nimport { User } from './Types/User';\nimport { Todo } from './Types/Todo';\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(todosFromServer);\n  const users: User[] = usersFromServer;\n  const [emptyTitle, setEmptyTitle] = useState(false);\n  const [emptyUser, setEmptyUser] = useState(false);\n  const [newTitle, setNewTitle] = useState('');\n  const [newUser, setNewUser] = useState(0);\n\n  function getNewTodoId() {\n    const maxId = Math.max(...todos.map(todo => todo.id));\n\n    return maxId + 1;\n  }\n\n  const validFormUser = () => (newUser\n    ? (setEmptyUser(false), false) : (setEmptyUser(true), true));\n\n  const validFormTitle = () => (newTitle\n    ? (setEmptyTitle(false), false) : (setEmptyTitle(true), true));\n\n  const addTodo = () => {\n    if (!validFormTitle() && !validFormUser()) {\n      const newTodo = {\n        id: getNewTodoId(),\n        title: newTitle,\n        userId: newUser,\n        completed: false,\n      };\n\n      setTodos([...todos, newTodo]);\n    }\n  };\n\n  const reset = () => {\n    if (validFormTitle()) {\n      setNewTitle('');\n    }\n\n    if (validFormUser()) {\n      setNewUser(0);\n    }\n\n    if (!validFormTitle() && !validFormUser()) {\n      setNewUser(0);\n      setNewTitle('');\n    }\n  };\n\n  const submitHandler = (e: React.FormEvent) => {\n    e.preventDefault();\n    validFormTitle();\n    validFormUser();\n    addTodo();\n    reset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" method=\"POST\" onSubmit={submitHandler}>\n        <div className=\"field\">\n          Title:\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={newTitle}\n            onChange={(e) => {\n              setNewTitle(e.target.value);\n              setEmptyTitle(false);\n            }}\n          />\n          {emptyTitle && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          User:\n          <select\n            data-cy=\"userSelect\"\n            value={newUser}\n            onChange={(e) => {\n              setNewUser(+e.target.value);\n              setEmptyUser(false);\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {users.map((user) => (\n              <option key={user.id} value={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {emptyUser && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">Add</button>\n      </form>\n      <TodoList todos={todos} users={users} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}